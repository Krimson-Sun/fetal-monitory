// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/v1/telemetry.v1.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Metric int32

const (
	Metric_METRIC_UNSPECIFIED Metric = 0
	Metric_METRIC_FHR         Metric = 1 // FHR — частота сердечных сокращений плода (bpm)
	Metric_METRIC_UC          Metric = 2 // UC  — маточные сокращения (отн. ед. или мм рт. ст.)
)

// Enum value maps for Metric.
var (
	Metric_name = map[int32]string{
		0: "METRIC_UNSPECIFIED",
		1: "METRIC_FHR",
		2: "METRIC_UC",
	}
	Metric_value = map[string]int32{
		"METRIC_UNSPECIFIED": 0,
		"METRIC_FHR":         1,
		"METRIC_UC":          2,
	}
)

func (x Metric) Enum() *Metric {
	p := new(Metric)
	*p = x
	return p
}

func (x Metric) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Metric) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_telemetry_v1_proto_enumTypes[0].Descriptor()
}

func (Metric) Type() protoreflect.EnumType {
	return &file_proto_v1_telemetry_v1_proto_enumTypes[0]
}

func (x Metric) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Metric.Descriptor instead.
func (Metric) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_telemetry_v1_proto_rawDescGZIP(), []int{0}
}

type Sample struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`    // Идентификатор сессии (строка/UUID)
	TsMs          uint64                 `protobuf:"varint,2,opt,name=ts_ms,json=tsMs,proto3" json:"ts_ms,omitempty"`                  // Время измерения в миллисекундах (Unix epoch)
	Metric        Metric                 `protobuf:"varint,3,opt,name=metric,proto3,enum=telemetry.v1.Metric" json:"metric,omitempty"` // Какая метрика: FHR или UC
	Value         float32                `protobuf:"fixed32,4,opt,name=value,proto3" json:"value,omitempty"`                           // Значение измерения
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sample) Reset() {
	*x = Sample{}
	mi := &file_proto_v1_telemetry_v1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample) ProtoMessage() {}

func (x *Sample) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_telemetry_v1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample.ProtoReflect.Descriptor instead.
func (*Sample) Descriptor() ([]byte, []int) {
	return file_proto_v1_telemetry_v1_proto_rawDescGZIP(), []int{0}
}

func (x *Sample) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Sample) GetTsMs() uint64 {
	if x != nil {
		return x.TsMs
	}
	return 0
}

func (x *Sample) GetMetric() Metric {
	if x != nil {
		return x.Metric
	}
	return Metric_METRIC_UNSPECIFIED
}

func (x *Sample) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`        // Для какой сессии подтверждение
	ReceivedCnt   uint64                 `protobuf:"varint,2,opt,name=received_cnt,json=receivedCnt,proto3" json:"received_cnt,omitempty"` // Сколько сэмплов принято с начала соединения/сессии
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_proto_v1_telemetry_v1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_telemetry_v1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_proto_v1_telemetry_v1_proto_rawDescGZIP(), []int{1}
}

func (x *Ack) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Ack) GetReceivedCnt() uint64 {
	if x != nil {
		return x.ReceivedCnt
	}
	return 0
}

var File_proto_v1_telemetry_v1_proto protoreflect.FileDescriptor

const file_proto_v1_telemetry_v1_proto_rawDesc = "" +
	"\n" +
	"\x1bproto/v1/telemetry.v1.proto\x12\ftelemetry.v1\"\x80\x01\n" +
	"\x06Sample\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x13\n" +
	"\x05ts_ms\x18\x02 \x01(\x04R\x04tsMs\x12,\n" +
	"\x06metric\x18\x03 \x01(\x0e2\x14.telemetry.v1.MetricR\x06metric\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x02R\x05value\"G\n" +
	"\x03Ack\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12!\n" +
	"\freceived_cnt\x18\x02 \x01(\x04R\vreceivedCnt*?\n" +
	"\x06Metric\x12\x16\n" +
	"\x12METRIC_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"METRIC_FHR\x10\x01\x12\r\n" +
	"\tMETRIC_UC\x10\x022I\n" +
	"\vDataService\x12:\n" +
	"\vPushSamples\x12\x14.telemetry.v1.Sample\x1a\x11.telemetry.v1.Ack(\x010\x01B>Z<github.com/your-org/your-repo/proto/telemetry/v1;telemetryv1b\x06proto3"

var (
	file_proto_v1_telemetry_v1_proto_rawDescOnce sync.Once
	file_proto_v1_telemetry_v1_proto_rawDescData []byte
)

func file_proto_v1_telemetry_v1_proto_rawDescGZIP() []byte {
	file_proto_v1_telemetry_v1_proto_rawDescOnce.Do(func() {
		file_proto_v1_telemetry_v1_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_telemetry_v1_proto_rawDesc), len(file_proto_v1_telemetry_v1_proto_rawDesc)))
	})
	return file_proto_v1_telemetry_v1_proto_rawDescData
}

var file_proto_v1_telemetry_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_v1_telemetry_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_v1_telemetry_v1_proto_goTypes = []any{
	(Metric)(0),    // 0: telemetry.v1.Metric
	(*Sample)(nil), // 1: telemetry.v1.Sample
	(*Ack)(nil),    // 2: telemetry.v1.Ack
}
var file_proto_v1_telemetry_v1_proto_depIdxs = []int32{
	0, // 0: telemetry.v1.Sample.metric:type_name -> telemetry.v1.Metric
	1, // 1: telemetry.v1.DataService.PushSamples:input_type -> telemetry.v1.Sample
	2, // 2: telemetry.v1.DataService.PushSamples:output_type -> telemetry.v1.Ack
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_v1_telemetry_v1_proto_init() }
func file_proto_v1_telemetry_v1_proto_init() {
	if File_proto_v1_telemetry_v1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_telemetry_v1_proto_rawDesc), len(file_proto_v1_telemetry_v1_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_telemetry_v1_proto_goTypes,
		DependencyIndexes: file_proto_v1_telemetry_v1_proto_depIdxs,
		EnumInfos:         file_proto_v1_telemetry_v1_proto_enumTypes,
		MessageInfos:      file_proto_v1_telemetry_v1_proto_msgTypes,
	}.Build()
	File_proto_v1_telemetry_v1_proto = out.File
	file_proto_v1_telemetry_v1_proto_goTypes = nil
	file_proto_v1_telemetry_v1_proto_depIdxs = nil
}
