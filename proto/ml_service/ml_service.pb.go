// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: ml_service.proto

package mlservicev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос на предсказание
type PredictRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`    // Идентификатор сессии
	BatchTsMs uint64                 `protobuf:"varint,2,opt,name=batch_ts_ms,json=batchTsMs,proto3" json:"batch_ts_ms,omitempty"` // Временная метка батча
	// Признаки из feature_extractor
	Stv                   float64 `protobuf:"fixed64,3,opt,name=stv,proto3" json:"stv,omitempty"`
	Ltv                   float64 `protobuf:"fixed64,4,opt,name=ltv,proto3" json:"ltv,omitempty"`
	BaselineHeartRate     float64 `protobuf:"fixed64,5,opt,name=baseline_heart_rate,json=baselineHeartRate,proto3" json:"baseline_heart_rate,omitempty"`
	TotalDecelerations    int32   `protobuf:"varint,6,opt,name=total_decelerations,json=totalDecelerations,proto3" json:"total_decelerations,omitempty"`
	LateDecelerations     int32   `protobuf:"varint,7,opt,name=late_decelerations,json=lateDecelerations,proto3" json:"late_decelerations,omitempty"`
	LateDecelerationRatio float64 `protobuf:"fixed64,8,opt,name=late_deceleration_ratio,json=lateDecelerationRatio,proto3" json:"late_deceleration_ratio,omitempty"`
	TotalAccelerations    int32   `protobuf:"varint,9,opt,name=total_accelerations,json=totalAccelerations,proto3" json:"total_accelerations,omitempty"`
	AccelDecelRatio       float64 `protobuf:"fixed64,10,opt,name=accel_decel_ratio,json=accelDecelRatio,proto3" json:"accel_decel_ratio,omitempty"`
	TotalContractions     int32   `protobuf:"varint,11,opt,name=total_contractions,json=totalContractions,proto3" json:"total_contractions,omitempty"`
	StvTrend              float64 `protobuf:"fixed64,12,opt,name=stv_trend,json=stvTrend,proto3" json:"stv_trend,omitempty"`
	BpmTrend              float64 `protobuf:"fixed64,13,opt,name=bpm_trend,json=bpmTrend,proto3" json:"bpm_trend,omitempty"`
	DataPoints            int32   `protobuf:"varint,14,opt,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	TimeSpanSec           float64 `protobuf:"fixed64,15,opt,name=time_span_sec,json=timeSpanSec,proto3" json:"time_span_sec,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PredictRequest) Reset() {
	*x = PredictRequest{}
	mi := &file_ml_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictRequest) ProtoMessage() {}

func (x *PredictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictRequest.ProtoReflect.Descriptor instead.
func (*PredictRequest) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{0}
}

func (x *PredictRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *PredictRequest) GetBatchTsMs() uint64 {
	if x != nil {
		return x.BatchTsMs
	}
	return 0
}

func (x *PredictRequest) GetStv() float64 {
	if x != nil {
		return x.Stv
	}
	return 0
}

func (x *PredictRequest) GetLtv() float64 {
	if x != nil {
		return x.Ltv
	}
	return 0
}

func (x *PredictRequest) GetBaselineHeartRate() float64 {
	if x != nil {
		return x.BaselineHeartRate
	}
	return 0
}

func (x *PredictRequest) GetTotalDecelerations() int32 {
	if x != nil {
		return x.TotalDecelerations
	}
	return 0
}

func (x *PredictRequest) GetLateDecelerations() int32 {
	if x != nil {
		return x.LateDecelerations
	}
	return 0
}

func (x *PredictRequest) GetLateDecelerationRatio() float64 {
	if x != nil {
		return x.LateDecelerationRatio
	}
	return 0
}

func (x *PredictRequest) GetTotalAccelerations() int32 {
	if x != nil {
		return x.TotalAccelerations
	}
	return 0
}

func (x *PredictRequest) GetAccelDecelRatio() float64 {
	if x != nil {
		return x.AccelDecelRatio
	}
	return 0
}

func (x *PredictRequest) GetTotalContractions() int32 {
	if x != nil {
		return x.TotalContractions
	}
	return 0
}

func (x *PredictRequest) GetStvTrend() float64 {
	if x != nil {
		return x.StvTrend
	}
	return 0
}

func (x *PredictRequest) GetBpmTrend() float64 {
	if x != nil {
		return x.BpmTrend
	}
	return 0
}

func (x *PredictRequest) GetDataPoints() int32 {
	if x != nil {
		return x.DataPoints
	}
	return 0
}

func (x *PredictRequest) GetTimeSpanSec() float64 {
	if x != nil {
		return x.TimeSpanSec
	}
	return 0
}

// Ответ с предсказанием
type PredictResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                // Идентификатор сессии
	BatchTsMs     uint64                 `protobuf:"varint,2,opt,name=batch_ts_ms,json=batchTsMs,proto3" json:"batch_ts_ms,omitempty"`             // Временная метка батча
	Prediction    float64                `protobuf:"fixed64,3,opt,name=prediction,proto3" json:"prediction,omitempty"`                             // Вероятность патологии (0.0 - 1.0)
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                                       // Статус: "success", "processing", "error"
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`                                     // Дополнительное сообщение
	HasEnoughData bool                   `protobuf:"varint,6,opt,name=has_enough_data,json=hasEnoughData,proto3" json:"has_enough_data,omitempty"` // Достаточно ли данных для предсказания
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PredictResponse) Reset() {
	*x = PredictResponse{}
	mi := &file_ml_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictResponse) ProtoMessage() {}

func (x *PredictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictResponse.ProtoReflect.Descriptor instead.
func (*PredictResponse) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{1}
}

func (x *PredictResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *PredictResponse) GetBatchTsMs() uint64 {
	if x != nil {
		return x.BatchTsMs
	}
	return 0
}

func (x *PredictResponse) GetPrediction() float64 {
	if x != nil {
		return x.Prediction
	}
	return 0
}

func (x *PredictResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PredictResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PredictResponse) GetHasEnoughData() bool {
	if x != nil {
		return x.HasEnoughData
	}
	return false
}

// Запрос на сброс коллектора
type ResetCollectorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Идентификатор сессии
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetCollectorRequest) Reset() {
	*x = ResetCollectorRequest{}
	mi := &file_ml_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetCollectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCollectorRequest) ProtoMessage() {}

func (x *ResetCollectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCollectorRequest.ProtoReflect.Descriptor instead.
func (*ResetCollectorRequest) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{2}
}

func (x *ResetCollectorRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// Ответ на сброс коллектора
type ResetCollectorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Успешность операции
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // Сообщение об операции
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetCollectorResponse) Reset() {
	*x = ResetCollectorResponse{}
	mi := &file_ml_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetCollectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCollectorResponse) ProtoMessage() {}

func (x *ResetCollectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCollectorResponse.ProtoReflect.Descriptor instead.
func (*ResetCollectorResponse) Descriptor() ([]byte, []int) {
	return file_ml_service_proto_rawDescGZIP(), []int{3}
}

func (x *ResetCollectorResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResetCollectorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_ml_service_proto protoreflect.FileDescriptor

const file_ml_service_proto_rawDesc = "" +
	"\n" +
	"\x10ml_service.proto\x12\rml_service.v1\"\xc6\x04\n" +
	"\x0ePredictRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1e\n" +
	"\vbatch_ts_ms\x18\x02 \x01(\x04R\tbatchTsMs\x12\x10\n" +
	"\x03stv\x18\x03 \x01(\x01R\x03stv\x12\x10\n" +
	"\x03ltv\x18\x04 \x01(\x01R\x03ltv\x12.\n" +
	"\x13baseline_heart_rate\x18\x05 \x01(\x01R\x11baselineHeartRate\x12/\n" +
	"\x13total_decelerations\x18\x06 \x01(\x05R\x12totalDecelerations\x12-\n" +
	"\x12late_decelerations\x18\a \x01(\x05R\x11lateDecelerations\x126\n" +
	"\x17late_deceleration_ratio\x18\b \x01(\x01R\x15lateDecelerationRatio\x12/\n" +
	"\x13total_accelerations\x18\t \x01(\x05R\x12totalAccelerations\x12*\n" +
	"\x11accel_decel_ratio\x18\n" +
	" \x01(\x01R\x0faccelDecelRatio\x12-\n" +
	"\x12total_contractions\x18\v \x01(\x05R\x11totalContractions\x12\x1b\n" +
	"\tstv_trend\x18\f \x01(\x01R\bstvTrend\x12\x1b\n" +
	"\tbpm_trend\x18\r \x01(\x01R\bbpmTrend\x12\x1f\n" +
	"\vdata_points\x18\x0e \x01(\x05R\n" +
	"dataPoints\x12\"\n" +
	"\rtime_span_sec\x18\x0f \x01(\x01R\vtimeSpanSec\"\xca\x01\n" +
	"\x0fPredictResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1e\n" +
	"\vbatch_ts_ms\x18\x02 \x01(\x04R\tbatchTsMs\x12\x1e\n" +
	"\n" +
	"prediction\x18\x03 \x01(\x01R\n" +
	"prediction\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12&\n" +
	"\x0fhas_enough_data\x18\x06 \x01(\bR\rhasEnoughData\"6\n" +
	"\x15ResetCollectorRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"L\n" +
	"\x16ResetCollectorResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xc0\x01\n" +
	"\tMLService\x12T\n" +
	"\x13PredictFromFeatures\x12\x1d.ml_service.v1.PredictRequest\x1a\x1e.ml_service.v1.PredictResponse\x12]\n" +
	"\x0eResetCollector\x12$.ml_service.v1.ResetCollectorRequest\x1a%.ml_service.v1.ResetCollectorResponseB\x10Z\x0e./;mlservicev1b\x06proto3"

var (
	file_ml_service_proto_rawDescOnce sync.Once
	file_ml_service_proto_rawDescData []byte
)

func file_ml_service_proto_rawDescGZIP() []byte {
	file_ml_service_proto_rawDescOnce.Do(func() {
		file_ml_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ml_service_proto_rawDesc), len(file_ml_service_proto_rawDesc)))
	})
	return file_ml_service_proto_rawDescData
}

var file_ml_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ml_service_proto_goTypes = []any{
	(*PredictRequest)(nil),         // 0: ml_service.v1.PredictRequest
	(*PredictResponse)(nil),        // 1: ml_service.v1.PredictResponse
	(*ResetCollectorRequest)(nil),  // 2: ml_service.v1.ResetCollectorRequest
	(*ResetCollectorResponse)(nil), // 3: ml_service.v1.ResetCollectorResponse
}
var file_ml_service_proto_depIdxs = []int32{
	0, // 0: ml_service.v1.MLService.PredictFromFeatures:input_type -> ml_service.v1.PredictRequest
	2, // 1: ml_service.v1.MLService.ResetCollector:input_type -> ml_service.v1.ResetCollectorRequest
	1, // 2: ml_service.v1.MLService.PredictFromFeatures:output_type -> ml_service.v1.PredictResponse
	3, // 3: ml_service.v1.MLService.ResetCollector:output_type -> ml_service.v1.ResetCollectorResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ml_service_proto_init() }
func file_ml_service_proto_init() {
	if File_ml_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ml_service_proto_rawDesc), len(file_ml_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ml_service_proto_goTypes,
		DependencyIndexes: file_ml_service_proto_depIdxs,
		MessageInfos:      file_ml_service_proto_msgTypes,
	}.Build()
	File_ml_service_proto = out.File
	file_ml_service_proto_goTypes = nil
	file_ml_service_proto_depIdxs = nil
}
